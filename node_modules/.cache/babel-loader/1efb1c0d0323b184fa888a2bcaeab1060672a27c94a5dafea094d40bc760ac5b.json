{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport \"../CSS/animation.css\"; // Import the animation CSS\n\nconst Animation = () => {\n  _s();\n  const handleScrollForMultipleElements = () => {\n    const elementSelectors = ['.animate-on-scroll', '.animate-on-scroll-left', '.animate-on-scroll-right', '.animate-on-scroll-zoom'];\n    const elements = document.querySelectorAll(elementSelectors.join(','));\n    elements.forEach(element => {\n      if (isPartiallyInViewport(element)) {\n        const animation = element.getAttribute('data-animation'); // Assuming the animation type is stored in a data attribute\n        element.classList.add('animate', animation);\n      }\n    });\n  };\n  const isPartiallyInViewport = element => {\n    const rect = element.getBoundingClientRect();\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n    const vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;\n    const horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n    return vertInView && horInView;\n  };\n  useEffect(() => {\n    handleScrollForMultipleElements(); // Run initially to check for elements in view\n    window.addEventListener('scroll', handleScrollForMultipleElements);\n    return () => {\n      window.removeEventListener('scroll', handleScrollForMultipleElements);\n    };\n  }, []);\n  return null; // Since this component is for side effects (animations), it returns nothing.\n};\n_s(Animation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["useEffect","Animation","_s","handleScrollForMultipleElements","elementSelectors","elements","document","querySelectorAll","join","forEach","element","isPartiallyInViewport","animation","getAttribute","classList","add","rect","getBoundingClientRect","windowHeight","window","innerHeight","documentElement","clientHeight","windowWidth","innerWidth","clientWidth","vertInView","top","height","horInView","left","width","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["D:/property-rental-hub/homeease/src/pages/Animation.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport \"../CSS/animation.css\"; // Import the animation CSS\r\n\r\nconst Animation = () => {\r\n    const handleScrollForMultipleElements = () => {\r\n        const elementSelectors = ['.animate-on-scroll', '.animate-on-scroll-left', '.animate-on-scroll-right', '.animate-on-scroll-zoom'];\r\n        const elements = document.querySelectorAll(elementSelectors.join(','));\r\n\r\n        elements.forEach(element => {\r\n            if (isPartiallyInViewport(element)) {\r\n                const animation = element.getAttribute('data-animation'); // Assuming the animation type is stored in a data attribute\r\n                element.classList.add('animate', animation);\r\n            }\r\n        });\r\n    };\r\n\r\n    const isPartiallyInViewport = (element) => {\r\n        const rect = element.getBoundingClientRect();\r\n        const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n        const windowWidth = window.innerWidth || document.documentElement.clientWidth;\r\n\r\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\r\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\r\n\r\n        return vertInView && horInView;\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleScrollForMultipleElements(); // Run initially to check for elements in view\r\n        window.addEventListener('scroll', handleScrollForMultipleElements);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScrollForMultipleElements);\r\n        };\r\n    }, []);\r\n\r\n    return null; // Since this component is for side effects (animations), it returns nothing.\r\n};\r\n\r\nexport default Animation;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,sBAAsB,CAAC,CAAC;;AAE/B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,+BAA+B,GAAGA,CAAA,KAAM;IAC1C,MAAMC,gBAAgB,GAAG,CAAC,oBAAoB,EAAE,yBAAyB,EAAE,0BAA0B,EAAE,yBAAyB,CAAC;IACjI,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAACH,gBAAgB,CAACI,IAAI,CAAC,GAAG,CAAC,CAAC;IAEtEH,QAAQ,CAACI,OAAO,CAACC,OAAO,IAAI;MACxB,IAAIC,qBAAqB,CAACD,OAAO,CAAC,EAAE;QAChC,MAAME,SAAS,GAAGF,OAAO,CAACG,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC1DH,OAAO,CAACI,SAAS,CAACC,GAAG,CAAC,SAAS,EAAEH,SAAS,CAAC;MAC/C;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMD,qBAAqB,GAAID,OAAO,IAAK;IACvC,MAAMM,IAAI,GAAGN,OAAO,CAACO,qBAAqB,CAAC,CAAC;IAC5C,MAAMC,YAAY,GAAGC,MAAM,CAACC,WAAW,IAAId,QAAQ,CAACe,eAAe,CAACC,YAAY;IAChF,MAAMC,WAAW,GAAGJ,MAAM,CAACK,UAAU,IAAIlB,QAAQ,CAACe,eAAe,CAACI,WAAW;IAE7E,MAAMC,UAAU,GAAIV,IAAI,CAACW,GAAG,IAAIT,YAAY,IAAOF,IAAI,CAACW,GAAG,GAAGX,IAAI,CAACY,MAAM,IAAK,CAAE;IAChF,MAAMC,SAAS,GAAIb,IAAI,CAACc,IAAI,IAAIP,WAAW,IAAOP,IAAI,CAACc,IAAI,GAAGd,IAAI,CAACe,KAAK,IAAK,CAAE;IAE/E,OAAOL,UAAU,IAAIG,SAAS;EAClC,CAAC;EAED7B,SAAS,CAAC,MAAM;IACZG,+BAA+B,CAAC,CAAC,CAAC,CAAC;IACnCgB,MAAM,CAACa,gBAAgB,CAAC,QAAQ,EAAE7B,+BAA+B,CAAC;IAElE,OAAO,MAAM;MACTgB,MAAM,CAACc,mBAAmB,CAAC,QAAQ,EAAE9B,+BAA+B,CAAC;IACzE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CAlCID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}